bin_PROGRAMS += qt/test/test_sequence-qt
TESTS += qt/test/test_sequence-qt

TEST_QT_MOC_CPP = \
  qt/test/moc_trafficgraphdatatests.cpp \
  qt/test/moc_uritests.cpp 

if ENABLE_WALLET
TEST_QT_MOC_CPP += qt/test/moc_paymentservertests.cpp
endif

TEST_QT_H = \
	qt/test/uritests.h \
	qt/test/paymentrequestdata.h \
  qt/test/paymentservertests.h \
  qt/test/trafficgraphdatatests.h

qt_test_test_sequence_qt_CPPFLAGS = $(SEQUENCE_INCLUDES) $(SEQUENCE_QT_INCLUDES) \
	$(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)

qt_test_test_sequence_qt_SOURCES = \
	qt/test/test_main.cpp \
  qt/test/uritests.cpp \
  qt/test/trafficgraphdatatests.cpp \
	$(TEST_QT_H)
if ENABLE_WALLET
qt_test_test_sequence_qt_SOURCES += \
	qt/test/paymentservertests.cpp
endif

nodist_qt_test_test_sequence_qt_SOURCES = $(TEST_QT_MOC_CPP)

qt_test_test_sequence_qt_LDADD = $(LIBSEQUENCEQT) $(LIBSEQUENCE_SERVER)
if ENABLE_WALLET
qt_test_test_sequence_qt_LDADD += $(LIBSEQUENCE_WALLET)
endif
qt_test_test_sequence_qt_LDADD += $(LIBSEQUENCE_CLI) $(LIBSEQUENCE_COMMON) $(LIBSEQUENCE_UTIL) $(LIBSEQUENCE_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \
	$(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \
	$(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)
qt_test_test_sequence_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

CLEAN_SEQUENCE_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno

CLEANFILES += $(CLEAN_SEQUENCE_QT_TEST)

test_sequence_qt : qt/test/test_sequence-qt$(EXEEXT)

test_sequence_qt_check : qt/test/test_sequence-qt$(EXEEXT) FORCE
	$(MAKE) check-TESTS TESTS=$^

test_sequence_qt_clean: FORCE
	rm -f $(CLEAN_SEQUENCE_QT_TEST) $(qt_test_test_sequence_qt_OBJECTS)
